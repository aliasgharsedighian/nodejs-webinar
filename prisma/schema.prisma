// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  role      Role      @default(USER)
  profile   Profile?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[] @relation("UserProducts")
  cart      Cart?
}

model Profile {
  id        Int     @id @default(autoincrement())
  firstname String?
  lastname  String?
  user      User    @relation(fields: [userId], references: [id])
  userId    Int     @unique
}

model Product {
  id          Int        @id @default(autoincrement())
  title       String
  description String
  price       Decimal
  images String[]
  stock       Int        @default(0)
  show        Boolean    @default(false)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  userId      Int?
  user        User?      @relation("UserProducts", fields: [userId], references: [id])
  cartItems   CartItem[]
}

model Cart {
  id        Int        @id @default(autoincrement())
  userId    Int        @unique
  user      User       @relation(fields: [userId], references: [id])
  cartItems CartItem[]
}

model CartItem {
  id        Int     @id @default(autoincrement())
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  cart      Cart    @relation(fields: [cartId], references: [id])
  cartId    Int
  quantity  Int     @default(1)
}

enum Role {
  USER
  ADMIN
}
